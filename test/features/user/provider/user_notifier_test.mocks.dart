// Mocks generated by Mockito 5.4.0 from annotations
// in parking_app/test/features/user/provider/user_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:parking_app/features/user/data/models/user.dart' as _i4;
import 'package:parking_app/features/user/domain/user_interactor.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserInteractor extends _i1.Mock implements _i2.UserInteractor {
  MockUserInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<_i4.AppUser?> signIn() => (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
        ),
        returnValue: _i3.Future<_i4.AppUser?>.value(),
      ) as _i3.Future<_i4.AppUser?>);
  @override
  _i3.Future<String> getAuthToken() => (super.noSuchMethod(
        Invocation.method(
          #getAuthToken,
          [],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
  @override
  String getUserID() => (super.noSuchMethod(
        Invocation.method(
          #getUserID,
          [],
        ),
        returnValue: '',
      ) as String);
  @override
  _i3.Future<_i4.AppUser?> fetchUser() => (super.noSuchMethod(
        Invocation.method(
          #fetchUser,
          [],
        ),
        returnValue: _i3.Future<_i4.AppUser?>.value(),
      ) as _i3.Future<_i4.AppUser?>);
  @override
  bool isUserLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isUserLoggedIn,
          [],
        ),
        returnValue: false,
      ) as bool);
}
